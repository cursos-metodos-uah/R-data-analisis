---
title: "Práctico 7. AFE y puntajes factoriales"
subtitle: "Estadística IV"
linktitle: "Práctico 7: AFE"
date: "2024-10-16"
lang: es
---

# Análisis factorial exploratorio (AFE)

## Presentación

Para el taller práctico de hoy utilizaremos la base de datos del Estudio Longitudinal Social de Chile, realizado por el Centro de estudios del conflicto y la cohesión social [COES](https://coes.cl/).

El Estudio Longitudinal Social del Chile [ELSOC](https://coes.cl/encuesta-panel/), único en Chile y América Latina, consiste en encuestar a casi 3.000 chilenos, anualmente, a lo largo de una década. ELSOC ha sido diseñado para evaluar la manera cómo piensan, sienten y se comportan los chilenos en torno a un conjunto de temas referidos al conflicto y la cohesión social en Chile. La población objetivo son hombres y mujeres entre 15 y 75 años de edad, tiene una representación de la población nacional urbana, donde se obtuvo una muestra original de **2927** casos en el año 2016 y mantiene **1728** en 2022, además de una muestra de refresco en 2018.

## Objetivo general

El objetivo de este ejercicio práctico es comprender y estimar un análisis factorial exploratorio con el fin de reducir la dimensionalidad de una batería de variables.

## Cargar paquetes

```{r}
pacman::p_load(tidyverse, #Conjunto de paquetes, sobre todo dplyr y ggplot2
               car, #Para recodificar
               haven,
               summarytools, #Para descriptivos
               sjmisc,
               psych,     # para Alfa de Chronbach
               sjPlot,
               psy, # scree plot function
               nFactors, # parallel
               GPArotation, # Rotación
               sjlabelled)

options(scipen = 999) # para desactivar notacion cientifica
rm(list = ls()) # para limpiar el entorno de trabajo
```


### Cargar base de datos

```{r }
load(url("https://dataverse.harvard.edu/api/access/datafile/7245118")) #Cargar base de datos
```

### Visualización de datos

```{r}
dim(elsoc_long_2016_2022.2)
```

Debido a la naturaleza longitudinal de ELSOC, la base de datos contiene 18035 casos (las mismas personas durante 6 años) y 750 variables (las mismas variables en 6 periodos distintos). Por lo tanto, para simplificar el proceso de análisis de este práctico trabajaremos solo con los casos y variables de quienes participaron en la cuarta ola (2019)

## Datos y variables

Para estimar AFE, utilizaremos específicamente el módulo de **Ciudadanía**. De este módulo utilizaremos un concepto en particular llamado *Confianza en instituciones* con los ítems:

- Grado de confianza: El Gobierno

- Grado de confianza: Los Partidos políticos

- Grado de confianza: Carabineros

- Grado de confianza: Los sindicatos

- Grado de confianza: Las empresas privadas

- Grado de confianza: El congreso nacional

- Grado de confianza: El presidente de la república


La idea general es ver si esque todas estas variables miden algún tipo de *confianza* o si esque existen dimensiones subyacentes.

Asimismo, vamos a utilizar los promedios y/o puntajes de estas variables para ver cómo influyen en la Satisfacción con la democracia en Chile

## Filtrar base de datos

Filtraremos la base de datos para quedarnos con las observaciones correspondientes solamente a la ola 4, y además seleccionaremos los ítems de interés.

```{r}
data <- elsoc_long_2016_2022.2 %>% filter(ola==4) %>%  # seleccionamos solo los casos de la ola 1
  select(satis_dem = c01,
         conf_gob = c05_01,
         conf_part = c05_02,
         conf_carab = c05_03,
         conf_sind = c05_04,
         conf_empre = c05_06,
         conf_cong = c05_07,
         conf_pres = c05_08,
         )

```

Estos ítems cuentan con las mismas categorías de respuesta: (1) Nada, a (5) Mucho. Además de los valores codificados como -888 y -999.

### Recodificar

Recodificamos los valores -888 y -999 en NA y eliminamos los NAs.

```{r, message=FALSE, warning=FALSE}
data$satis_dem <- car::recode(data$satis_dem, "c(-999,-888)=NA")
data$conf_gob <- car::recode(data$conf_gob, "c(-999,-888)=NA")
data$conf_part <- car::recode(data$conf_part, "c(-999,-888)=NA")
data$conf_carab <- car::recode(data$conf_carab, "c(-999,-888)=NA")
data$conf_sind <- car::recode(data$conf_sind, "c(-999,-888)=NA")
data$conf_empre <- car::recode(data$conf_empre, "c(-999,-888)=NA")
data$conf_cong <- car::recode(data$conf_cong, "c(-999,-888)=NA")
data$conf_pres <- car::recode(data$conf_pres, "c(-999,-888)=NA")


data$conf_gob <- set_labels(data$conf_gob,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_part <- set_labels(data$conf_part,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_carab <- set_labels(data$conf_carab,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))

data$conf_sind <- set_labels(data$conf_sind,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_empre <- set_labels(data$conf_empre,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_cong <- set_labels(data$conf_cong,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
data$conf_pres <- set_labels(data$conf_pres,
            labels=c( "Nada"=1,
                      "Poca"=2,
                      "Algo"=3,
                      "Bastante"=4,
                      "Mucha"=5))
```

## Análisis

```{r}
data %>% select(conf_gob:conf_pres) %>% 
  plot_stackfrq() + theme(legend.position="bottom")
```


### Estimar correlación

```{r}
data %>% select(conf_gob:conf_pres) %>% tab_corr(triangle = "lower")
```

Podemos observar que todas las correlaciones son positivas, por lo que no quedaron ítems invertidos.

```{r}
data %>% select(conf_gob:conf_pres) %>% psych::alpha()
```
Si sacamos conf_sind el alpha sube a 0.8

```{r}
data %>% select(conf_gob:conf_carab, conf_empre:conf_pres) %>% psych::alpha()
```


```{r}
data <- cbind(data, 
              "conf_inst"=rowMeans(data %>%
              dplyr::select(conf_gob:conf_carab, conf_empre:conf_pres), 
              na.rm=TRUE))

summary(data$conf_inst)
```


## Análisis factorial exploratorio

¿Qué se puede deducir de la matriz de correlaciones en relación a la estructura subyacente en términos de variables latentes? No hay claridad de grupos de indicadores asociados entre sí.

### Test de adecuación de matriz para AFE

KMO (Kaiser, Meyer, Olkin Measure of Sampling Adequacy):

* Varía entre 0 y 1. Contrasta si las correlaciones parciales entre las variables son pequeñas

* Valores pequeños (menores a 0.5) indican que los datos no serían adecuados para AFE, ya que las correlaciones entre pares de variables no pueden ser explicadas por otras variables.

```{r}
corMat  <- data %>% select(conf_gob:conf_pres) %>%
  cor(use = "complete.obs")  # estimar matriz pearson

KMO(corMat)
```

En este caso las correlaciones son altas, por lo que los datos sí son adecuados para AFE.

### Nivel de correlaciones de la matriz: test de esfericidad de Barlett

Se utiliza para evluar la hipótesis que la matriz de correlaciones es una matriz identidad (diagonal=1 y bajo la diagonal=0)

* Se busca significación (p < 0.05) ya que se espera que las variables estén correlacionadas

```{r}
cortest.bartlett(corMat, n = 3417)
```

En este caso el valor p es 0, así que hay significación estadística

### Selección de número de factores
```{r}
data %>% select(conf_gob:conf_pres) %>% scree.plot()
```

```{r}
fa.parallel(corMat, n.obs=3417)
```

### Extracción

- ejes principales
```{r}
fac_pa <- data %>% select(conf_gob:conf_pres) %>% fa(nfactors = 3, fm= "pa")
#summary(fac_pa)
fac_pa
```

- Maximum likelihood

Maximiza la posibilidad de que los parámetros reproduzcan los datos observados

```{r}
fac_ml <- data %>% select(conf_gob:conf_pres) %>% fa(nfactors = 3, fm= "ml")
fac_ml
```

### Rotación

- Varimax (ortogonal)
```{r}
fac_ml_var <- data %>% select(conf_gob:conf_pres) %>% fa(nfactors = 3, fm= "ml", rotate="varimax") # ortogonal
fac_ml_var
```

- Promax (oblicua)
```{r}
fac_ml_pro <- data %>% select(conf_gob:conf_pres) %>% fa(nfactors = 3, fm= "ml", rotate="promax")
fac_ml_pro
```

### Casi automático con sjPlot

```{r}
data %>% select(conf_gob:conf_pres) %>% sjPlot::tab_fa(method = "ml", rotation = "promax", show.comm = TRUE, title = "Análisis factorial de confianza en instituciones")
```

Luego de realizar el Análisis factorial exploratorio existen varias alternativas sobre los pasos a seguir. Por ejemplo, es posible estimar un promedio simple entre cada una de las variables de los factores. Otra opción es estimar **puntajes factoriales**.

### Puntajes factoriales


```{r}
fac_ml <- data %>% select(conf_gob:conf_pres) %>% fa(nfactors = 3, fm= "ml", rotate = "promax", scores = "regression")
fac_ml
```

```{r}
data <- cbind(data, fac_ml$scores)
```

```{r}
data %>% select(conf_inst, ML1, ML2, ML3) %>% head(10)
```
Factor 1
```{r}
summary(data$ML1)
```
Factor 2
```{r}
summary(data$ML2)
```
Factor 3
```{r}
summary(data$ML3)
```

### Renombramos los factores para darle más sentido a la interpretación

```{r}
data<- data %>% rename(inst_ejecutivo=ML1,
                inst_partidos=ML2,
                inst_trabajo=ML3)
```

### Ahora probar cada uno de estos puntajes en un modelo de regresión

```{r}
data<-na.omit(data)
reg1 <- lm(satis_dem~conf_inst, data=data)
reg2 <- lm(satis_dem~inst_ejecutivo, data=data)
reg3 <- lm(satis_dem~inst_partidos, data=data)
reg4 <- lm(satis_dem~inst_trabajo, data=data)
reg5 <- lm(satis_dem~inst_ejecutivo+inst_partidos+inst_trabajo, data=data)
```


```{r results='asis'}
texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5))
```






